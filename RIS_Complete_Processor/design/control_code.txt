R:
	 else if(func3 == 3'b000 && func7 == 7'b0000000) {RegWrite,alu_ctrl,rw,MemtoReg,AluSrc,whb} <= 10'b1_0000_x_0_0_10; //ADD 
	 else if(func3 == 3'b000 && func7 == 7'b0100000) {RegWrite,alu_ctrl,rw,MemtoReg,AluSrc,whb} <= 10'b1_0001_x_0_0_10; //SUB 
	 else if(func3 == 3'b001 && func7 == 7'b0000000) {RegWrite,alu_ctrl,rw,MemtoReg,AluSrc,whb} <= 10'b1_1010_x_0_0_10; //SLL 
	 else if(func3 == 3'b101 && func7 == 7'b0000000) {RegWrite,alu_ctrl,rw,MemtoReg,AluSrc,whb} <= 10'b1_1001_x_0_0_10; //SRL 
	 else if(func3 == 3'b100 && func7 == 7'b0000000) {RegWrite,alu_ctrl,rw,MemtoReg,AluSrc,whb} <= 10'b1_1000_x_0_0_10; //XOR 
	 else if(func3 == 3'b111 && func7 == 7'b0000000) {RegWrite,alu_ctrl,rw,MemtoReg,AluSrc,whb} <= 10'b1_0010_x_0_0_10; //AND 
	 else if(func3 == 3'b110 && func7 == 7'b0000000) {RegWrite,alu_ctrl,rw,MemtoReg,AluSrc,whb} <= 10'b1_0100_x_0_0_10; //OR 
I1:
	 else if(func3 == 3'b000) {RegWrite,alu_ctrl,rw,MemtoReg,AluSrc,whb} <= 10'b1_0000_x_0_1_10; //ADDI 
	 else if(func3 == 3'b001 && func7 == 7'b0000000) {RegWrite,alu_ctrl,rw,MemtoReg,AluSrc,whb} <= 10'b1_1010_x_0_1_10; //SLLI 
	 else if(func3 == 3'b101 && func7 == 7'b0000000) {RegWrite,alu_ctrl,rw,MemtoReg,AluSrc,whb} <= 10'b1_1001_x_0_1_10; //SRLI 
	 else if(func3 == 3'b100) {RegWrite,alu_ctrl,rw,MemtoReg,AluSrc,whb} <= 10'b1_1000_x_0_1_10; //XORI 
	 else if(func3 == 3'b111) {RegWrite,alu_ctrl,rw,MemtoReg,AluSrc,whb} <= 10'b1_0010_x_0_1_10; //ANDI 
	 else if(func3 == 3'b110) {RegWrite,alu_ctrl,rw,MemtoReg,AluSrc,whb} <= 10'b1_0100_x_0_1_10; //ORI 
I2:
	 else if(func3 == 3'b010) {RegWrite,alu_ctrl,rw,MemtoReg,AluSrc,whb} <= 10'b1_0000_1_1_1_10; //LW 
	 else if(func3 == 3'b001) {RegWrite,alu_ctrl,rw,MemtoReg,AluSrc,whb} <= 10'b1_0000_1_1_1_01; //LH 
	 else if(func3 == 3'b000) {RegWrite,alu_ctrl,rw,MemtoReg,AluSrc,whb} <= 10'b1_0000_1_1_1_00; //LB 
S:
	 else if(func3 == 3'b010) {RegWrite,alu_ctrl,rw,MemtoReg,AluSrc,whb} <= 10'b0_0000_0_0_1_10; //SW 
	 else if(func3 == 3'b001) {RegWrite,alu_ctrl,rw,MemtoReg,AluSrc,whb} <= 10'b0_0000_0_0_1_01; //SH 
	 else if(func3 == 3'b000) {RegWrite,alu_ctrl,rw,MemtoReg,AluSrc,whb} <= 10'b0_0000_0_0_1_00; //SB 
